
package fussysmt;

import java.util.List;

/**
 * Functions are *always* monomorphic.
 * This means that they have a fixed arity and signature.
 * They are generated by a FunctionConstructor applied to a qualifier.
 *
 * A function does not "own" its symbol, the function constructor does.
 *
 *
 * Functions and sorts are both full determined by their qualifiers.
 * When generating the sexprs, the sorts in the qualifier are ignored.
 * 
 * Arity of the signature and the qualifier.getArity() must match.
 */
public interface Function extends Production<Qualifier, FunctionConstructor> {
  public Qualifier producedBy();
  public FunctionConstructor producer();
  public Signature getSignature();
  
  /* A synonym for producedBy().getQualifiedSymbol() */
  public Symbol getSymbol();
  /* A synonym for producedBy().getArity() */
  public int getArity();
  /* A synonym for getSignature().getDomainSorts() */
  public List<Sort> getDomainSorts();
  /* A synonym for getSignature().getDomainSort(i) */
  public Sort getDomainSort(int i);
  /* A synonym for getSignature().getCodomainSort() */
  public Sort getCodomainSort();

  /* A synonym for getSignature().getCodomainSort() */
  public boolean canApply(List<Term> args);
}

